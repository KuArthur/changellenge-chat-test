{"version":3,"sources":["Components/User/User.jsx","Components/UsersList/UsersList.jsx","img/user.svg","Components/MesssagesList/MessagesList.jsx","Components/Controller/Controller.jsx","Components/Link/Link.jsx","api/api.js","Chat.js","reportWebVitals.js","index.js"],"names":["User","user","handleClick","isSelected","className","cn","onClick","src","process","img","alt","name","UsersList","users","onUserSelect","selectedUser","useState","isActive","setActive","handleDropList","map","id","MessagesList","messages","el","i","photo","Controller","onSendMessage","onTextChange","value","onSubmit","e","preventDefault","onChange","target","placeholder","Link","link","href","this","a","usersDb","userId","console","log","messageText","concat","App","text","setText","setUsers","setMessages","setUserId","useEffect","api","getUserList","newUsers","fetchUserList","getUserHistory","newMessages","fetchMessages","handleSendMessage","sendMessage","handleChangeUser","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e3827b86.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport cn from 'classnames';\r\nimport './User.scss';\r\n\r\nexport default function User({ user, handleClick, isSelected }) {\r\n    \r\n    return (\r\n        <div className = {cn('User', isSelected ? 'User-selected': '')} onClick={() => handleClick(user)}>\r\n            <img className = 'User--photo' src = {process.env.PUBLIC_URL + user.img} alt='' />\r\n            <span className = 'User--name'>{user.name}</span>\r\n        </div>\r\n    )\r\n}","import {React,useState} from 'react';\r\n\r\nimport cn from 'classnames';\r\n\r\nimport './UsersList.scss';\r\n\r\nimport User from \"../User/User\"\r\n\r\nexport default function UsersList({ users, onUserSelect, selectedUser }) {\r\n    const [isActive, setActive] = useState(false);\r\n\r\n    const handleDropList = () => {\r\n        setActive(!isActive);\r\n        \r\n    }\r\n\r\n    return (\r\n        <div className = 'UsersList'>\r\n        <div className = 'UsersList--title' onClick = {handleDropList}>\r\n            <span>Список друзей:</span>\r\n            {\r\n                selectedUser &&\r\n                <span className = 'Userlist--username'>{selectedUser.name}</span>\r\n            }\r\n            \r\n        </div>\r\n        <div className = {cn('UsersList--users',isActive ? 'UsersList--users-active': '')}>\r\n            {users.map(user => (\r\n                <div className = 'UsersList--user' onClick = {handleDropList}>\r\n                    <User key={user.id} user={user} isSelected={selectedUser && user.id === selectedUser.id}\r\n                          handleClick = {onUserSelect}\r\n                    />\r\n                </div>\r\n            ))}\r\n        </div>\r\n        \r\n            \r\n        </div>\r\n    )\r\n}","export default __webpack_public_path__ + \"static/media/user.a3d9eecd.svg\";","import {React} from 'react';\r\n\r\nimport './MessagesList.scss';\r\n\r\nimport photo from \"../../img/user.svg\";\r\n\r\nexport default function MessagesList({messages}) {\r\n    return (\r\n        <div className = 'MessagesList'>\r\n                {messages.map((el,i) => (\r\n                    <div className = 'MessagesList--message' key = {i}> \r\n                        <p className = 'MessagesList--text'>{el}</p>\r\n                        <img className = 'MessagesList--photo' src = {photo} alt = \"\" />\r\n                    </div>\r\n                ))}\r\n        </div>\r\n    )\r\n}\r\n\r\n// {(ref) => list = ref}","import {React} from 'react';\r\n\r\nimport './Controller.scss';\r\n\r\nexport default function Controller({onSendMessage, onTextChange,value}) {\r\n    const handleTextChange = e => {\r\n        onTextChange(e.target.value);\r\n    }\r\n\r\n    const handleSendMessage = e => {\r\n        onSendMessage()\r\n        e.preventDefault();\r\n    }\r\n    \r\n    return (\r\n        <div className = 'Controller'>\r\n            <form onSubmit = {handleSendMessage}>\r\n                <div className = 'Controller--wrap'>\r\n                    <input  onChange = {handleTextChange} \r\n                            value = {value}\r\n                            placeholder = 'Введите ваше сообщение'\r\n                            className = 'Controller--input'\r\n                    />\r\n                    <button className = 'Controller--button'></button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}","import {React} from 'react';\r\n\r\nimport './Link.scss';\r\n\r\nexport default function Link({link,href}) {\r\n    return (\r\n        <a className = 'Link' href = {href}>{link}</a>\r\n    )\r\n}\r\n\r\n","import usersDb from \"../db/users.json\";\r\n\r\nclass ApiMock {\r\n  constructor() {\r\n    this.messages = {};\r\n  }\r\n\r\n  async getUserList() {\r\n    return usersDb;\r\n  }\r\n\r\n  async getUserHistory(userId) {\r\n    console.log(userId)\r\n    return this.messages[userId] || [];\r\n  }\r\n\r\n  async sendMessage(userId, messageText) {\r\n    console.log({userId,messageText})\r\n    this.messages[userId] = (this.messages[userId] || []).concat(messageText);\r\n  }\r\n}\r\n\r\nexport default new ApiMock();\r\n","import {React,useState,useEffect} from 'react';\n\nimport './Chat.scss';\n\nimport UsersList from './Components/UsersList/UsersList'\nimport MessagesList from './Components/MesssagesList/MessagesList';\nimport Controller from './Components/Controller/Controller';\nimport Link from './Components/Link/Link';\nimport api from './api/api';\n\n\nfunction App() {\n  const [text, setText] = useState('');\n  const [users, setUsers] = useState([]);\n  const [messages, setMessages] = useState([]);\n  const [selectedUser, setUserId] = useState();\n\n  useEffect(() => {\n    const fetchUserList = async () => {\n      const newUsers = await api.getUserList();\n      setUsers(newUsers);\n      setUserId(newUsers[0]);\n    }\n\n    fetchUserList();\n  }, []);\n  \n  useEffect(() => {\n    const fetchMessages = async () => {\n      if (typeof selectedUser === 'undefined') return;\n \n      const newMessages = await api.getUserHistory(selectedUser.id);\n      setMessages(newMessages);\n    }\n\n    fetchMessages();\n    setText('');\n  }, [selectedUser])\n\n  const handleTextChange = text => {\n    setText(text);\n  }\n\n  const handleSendMessage = async () => {\n    if (!text) return;\n\n    await api.sendMessage(selectedUser.id, text);\n\n    const newMessages = await api.getUserHistory(selectedUser.id);\n    setMessages(newMessages);\n\n    setText('');\n  }\n\n  const handleChangeUser = async (user) => {\n    if (selectedUser.id === user.id) return;\n\n    setUserId(user);\n  }\n\n  return (\n    <div className= \"Chat\">\n    <div className = \"Chat--link-exit\">\n      <Link link = 'Выход' href = '#' />\n    </div>\n    <div className = \"Chat--container\">\n       <div className = \"Chat--userList\">\n        <UsersList selectedUser={selectedUser} users={users} onUserSelect={handleChangeUser}/>\n      </div>\n\n      <div className = \"Chat--messageControl\">\n        <MessagesList messages = {messages} />\n        <Controller onTextChange = {handleTextChange}\n                    onSendMessage = {handleSendMessage}\n                    value = {text}      \n        />\n      </div>\n    </div>\n     \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport Chat from './Chat';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Chat />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}