{"version":3,"sources":["Components/User/User.jsx","Components/UsersList/UsersList.jsx","img/user.svg","Components/MesssagesList/MessagesList.jsx","Components/Controller/Controller.jsx","api/api.js","Chat.js","reportWebVitals.js","index.js"],"names":["User","user","onClick","isSelected","className","id","src","process","img","alt","name","UsersList","users","onUserSelect","selectedUserId","map","MessagesList","props","messages","el","i","photo","Controller","onSubmit","e","onSendMessage","preventDefault","onChange","onTextChange","target","value","placeholder","this","a","usersDb","userId","console","log","messageText","concat","App","useState","text","setText","setUsers","setMessages","setUserId","useEffect","api","getUserList","newUsers","fetchUserList","getUserHistory","newMessages","fetchMessages","handleSendMessage","sendMessage","handleChangeUser","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4300c52b.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport './User.scss';\r\n\r\nexport default function User({ user, onClick, isSelected }) {\r\n    \r\n    return (\r\n        <div className = 'User' onClick={() => onClick(user.id)}>\r\n            <img className = 'User--photo' src = {process.env.PUBLIC_URL + user.img} alt='' />\r\n            <span className = 'User--name'>{user.name}</span>\r\n            {isSelected && 'dfhgfjftdyrjdftyj'}\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\n\r\nimport './UsersList.scss';\r\n\r\nimport User from \"../User/User\"\r\n\r\nexport default function UsersList({ users, onUserSelect, selectedUserId }) {\r\n\r\n    return (\r\n        <div className = 'UsersList'>\r\n        <div className = 'UsersList--title'>Список друзей:</div>\r\n        <div className = 'UsersList--users'>\r\n            {users.map(user => (\r\n                <User key={user.id} user={user} isSelected={user.id === selectedUserId}\r\n                      onClick = {onUserSelect}\r\n                />\r\n            ))}\r\n        </div>\r\n        \r\n            \r\n        </div>\r\n    )\r\n}","export default __webpack_public_path__ + \"static/media/user.a3d9eecd.svg\";","import {React} from 'react';\r\n\r\nimport './MessagesList.scss';\r\n\r\nimport photo from \"../../img/user.svg\";\r\n\r\nexport default function MessagesList(props) {\r\n    let messages = props.messages;\r\n    \r\n    return (\r\n        <div className = 'MessagesList'>\r\n                {messages.map((el,i) => (\r\n                    <div className = 'MessagesList--message' key = {i}> \r\n                        <p className = 'MessagesList--text'>{el}</p>\r\n                        <img className = 'MessagesList--photo' src = {photo} alt = \"\" />\r\n                    </div>\r\n                ))}\r\n        </div>\r\n    )\r\n}\r\n\r\n// {(ref) => list = ref}","import {React} from 'react';\r\n\r\nimport './Controller.scss';\r\n\r\nexport default function Controller(props) {\r\n    const handleTextChange = e => {\r\n        props.onTextChange(e.target.value);\r\n    }\r\n\r\n    const handleSendMessage = e => {\r\n        props.onSendMessage()\r\n        e.preventDefault();\r\n    }\r\n    \r\n    return (\r\n        <div className = 'Controller'>\r\n            <form onSubmit = {handleSendMessage}>\r\n                <div className = 'Controller--wrap'>\r\n                    <input  onChange = {handleTextChange} \r\n                            value = {props.value}\r\n                            placeholder = 'Введите ваше сообщение'\r\n                            className = 'Controller--input'\r\n                    />\r\n                    <button className = 'Controller--button'></button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}","import usersDb from \"../db/users.json\";\r\n\r\nclass ApiMock {\r\n  constructor() {\r\n    this.messages = {};\r\n  }\r\n\r\n  async getUserList() {\r\n    return usersDb;\r\n  }\r\n\r\n  async getUserHistory(userId) {\r\n    console.log(userId)\r\n    return this.messages[userId] || [];\r\n  }\r\n\r\n  async sendMessage(userId, messageText) {\r\n    console.log({userId,messageText})\r\n    this.messages[userId] = (this.messages[userId] || []).concat(messageText);\r\n  }\r\n}\r\n\r\nexport default new ApiMock();\r\n","import {React,useState,useEffect} from 'react';\n\nimport './Chat.scss';\n\nimport UsersList from \"./Components/UsersList/UsersList\"\nimport MessagesList from './Components/MesssagesList/MessagesList';\nimport Controller from './Components/Controller/Controller';\nimport api from './api/api';\n\n\nfunction App() {\n  const [text, setText] = useState('');\n  const [users, setUsers] = useState([]);\n  const [messages, setMessages] = useState([]);\n  const [selectedUserId, setUserId] = useState();\n\n  useEffect(() => {\n    const fetchUserList = async () => {\n      const newUsers = await api.getUserList();\n      setUsers(newUsers);\n      setUserId(newUsers[0].id);\n    }\n\n    fetchUserList();\n  }, []);\n  \n  useEffect(() => {\n    const fetchMessages = async () => {\n      if (typeof selectedUserId === 'undefined') return;\n \n      const newMessages = await api.getUserHistory(selectedUserId);\n      setMessages(newMessages);\n    }\n\n    fetchMessages();\n    setText('');\n  }, [selectedUserId])\n\n  const handleTextChange = text => {\n    setText(text);\n  }\n\n  const handleSendMessage = async () => {\n    if (!text) return;\n\n    await api.sendMessage(selectedUserId, text);\n\n    const newMessages = await api.getUserHistory(selectedUserId);\n    setMessages(newMessages);\n\n    setText('');\n  }\n\n  const handleChangeUser = async (userId) => {\n    if (selectedUserId === userId) return;\n\n    setUserId(userId);\n  }\n\n  return (\n    <div className= \"Chat\">\n      <div className = \"Chat--userList\">\n        <UsersList selectedUserId={selectedUserId} users={users} onUserSelect={handleChangeUser}/>\n      </div>\n\n      <div className = \"Chat--messageControl\">\n        <MessagesList messages = {messages} />\n        <Controller onTextChange = {handleTextChange}\n                    onSendMessage = {handleSendMessage}\n                    value = {text}      \n        />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport Chat from './Chat';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Chat />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}